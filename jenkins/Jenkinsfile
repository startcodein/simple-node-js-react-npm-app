pipeline {
    agent {
        node { label 'build_host' }
    }
    environment {
        CI = 'true'
        DOTNET_RUNNING_IN_CONTAINER = 'true'
    }
    stages {
        stage('Code Sanity Check') {
            steps {
                sh './jenkins/scripts/lint.sh'
            }
        }
        stage('Build') {
            steps {
                sh 'npm install ; ls -l'
            }
        }
        stage('Test and Audit') {
            failFast true
            parallel {
              stage('Functional Testing') {
                steps {
                    sh './jenkins/scripts/test.sh'
                }
              }
              stage('Compliance Testing') {
                steps {
                    sh './jenkins/scripts/audit.sh'
                }
              }
            }
        }
        stage('Security Analysis') {
            steps {
                sh 'cd ${PWD}/src; /opt/cicd/sonar-scanner-4.2.0.1873-linux/bin/sonar-scanner'
            }
          }
        stage('Deployment') {
            steps {
                sh './jenkins/scripts/deliver.sh'
                sh 'sleep 3; ./jenkins/scripts/kill.sh'
            }
        }
    }
    post {
      always  {
        archiveArtifacts artifacts: 'build*.zip', fingerprint: true
      }
    }
}
